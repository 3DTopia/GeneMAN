name: "geneman-texture-refine"
tag: "${rmspace:${system.prompt_processor.prompt},_}"
exp_root_dir: "outputs"
seed: 0

data_type: "single-image-datamodule"
data:
  image_path: ./load/images/hamburger_rgba.png
  height: 1024
  width: 1024
  default_elevation_deg: 0.0
  default_azimuth_deg: 0.0
  default_camera_distance: 3.0
  default_fovy_deg: 20.0
  requires_depth: true
  requires_normal: true
  sampling_type: "default"
  multi_view: true
  random_camera:
    train_downsample_resolution: 1
    eval_downsample_resolution: 1
    train_data_interval: 1
    eval_data_interval: 1
    dataroot: ???
    eval_width: 1024
    eval_height: 1024
    eval_camera_distance: 3
    eval_fovy_deg: 20.
    eval_elevation_deg: 0.
    n_views: 120
    sampling_type: ${data.sampling_type}

system_type: "geneman-system"
system:
  stage: "texture"
  # use_rgb_ref: true
  sampling_type: ${data.sampling_type}
  
  # If using geometry from previous training
  geometry_type: "tetrahedra-sdf-grid"
  geometry_convert_from: ???
  geometry_convert_inherit_texture: true
  geometry:
    radius: 1.0 # consistent with coarse
    isosurface_resolution: 512
    isosurface_deformable_grid: false
    pos_encoding_config:
      otype: HashGrid
      n_levels: 16
      n_features_per_level: 2
      log2_hashmap_size: 19
      base_resolution: 16
      per_level_scale: 1.4472692374403782 # max resolution 4096
    # n_feature_dims: 8 # albedo3 + roughness1 + metallic1 + bump3
    fix_geometry: true

  material_type: "no-material"
  material:
    n_output_dims: 3
    color_activation: sigmoid

  # material_type: "pbr-material"
  # material:
  #   material_activation: sigmoid
  #   environment_texture: "load/lights/mud_road_puresky_1k.hdr"
  #   environment_scale: 2.0
  #   min_metallic: 0.0
  #   max_metallic: 0.0
  #   min_roughness: 0.7
  #   max_roughness: 0.9
  #   use_bump: true

  # material_type: "diffuse-with-point-light-material"
  # material:
  #   ambient_only_steps: 200000
  #   soft_shading: true

  background_type: "solid-color-background"
  background:
    n_output_dims: 3
    color: [1, 1, 1]

  renderer_type: "nvdiff-rasterizer"
  renderer:
    use_sdf_loss: false
    context_type: cuda
    normal_type: 'camera'

  prompt_processor_type: "stable-diffusion-prompt-processor"
  prompt_processor:
    pretrained_model_name_or_path: "./pretrained_models/normal-aligned-sd1.5"
    prompt: ???
    front_threshold: 45.
    back_threshold: 45.
    human_part_prompt: false

  guidance_type: "sds-du-controlnet-guidance"
  guidance:
    pretrained_model_name_or_path: "./pretrained_models/normal-aligned-sd1.5"
    unet_path: "./pretrained_models/geneman-prior2d"
    min_step_percent: [5000, 0.5, 0.5, 10000]
    max_step_percent: [5000, 0.51, 0.51, 10000]
    control_type: 'input_normal'
    controlnet_name_or_path: './pretrained_models/controlnet-normal-sd1.5'
    condition_scale: 1.0
    guidance_scale: 7.5
    per_editing_step: 30
 

 
  loggers:
    wandb:
      enable: false
      project: "threestudio"
      name: None

  loss:
    lambda_l1: 1
    lambda_p: 100
    lambda_rgb: 1000
    # lambda_sds: 0.1

  freq:
    n_ref: 2
    ref_only_steps: 0
    ref_or_guidance: "alternate"  # "accumulate"
    guidance_eval: 0

  optimizer:
    name: AdamW
    args:
      betas: [0.9, 0.99]
      eps: 1.e-15
    params:
      geometry.encoding:
        lr: 0.01
      geometry.feature_network:
        lr: 0.01
      background:
        lr: 0.001

trainer:
  max_steps: 10000
  log_every_n_steps: 1
  num_sanity_val_steps: 0
  val_check_interval: 1000
  enable_progress_bar: true
  precision: 16-mixed

checkpoint:
  save_last: true
  save_top_k: -1
  every_n_train_steps: 10001
